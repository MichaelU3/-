说几条写JavaScript的基本规范？
  1.不要在同一行声明多个变量。
  2.请使用 ===/!==来比较true/false或者数值
  3.使用对象字面量替代new Array这种形式
  4.不要使用全局函数。
  5.Switch语句必须带有default分支
  6.函数不应该有时候有返回值，有时候没有返回值。
  7.For循环必须使用大括号
  8.If语句必须使用大括号
  9.for-in循环中的变量 应该使用var关键字明确限定作用域，从而避免作用域污染。

eval是做什么的？
  它的功能是把对应的字符串解析成JS代码并运行；
  应该避免使用eval，不安全，非常耗性能（2次，一次解析成js语句，一次执行）。
  
谈谈This对象的理解。
  this是js的一个关键字，随着函数使用场合不同，this的值会发生变化。
   
  但是有一个总原则，那就是this指的是调用函数的那个对象。
   
  this一般情况下：是全局对象Global。 作为方法调用，那么this就是指这个对象
  
new操作符具体干了什么呢?
    1、创建一个空对象，并且 this 变量引用该对象，同时还继承了该函数的原型。
    2、属性和方法被加入到 this 引用的对象中。
    3、新创建的对象由 this 所引用，并且最后隐式的返回 this 。
 
body中的onload()函数和jQuery中的document.ready()有什么区别？

  1、我们可以在页面中使用多个document.ready()，但只能使用一次onload()。
  
  2、document.ready()函数在页面DOM元素加载完以后就会被调用，而onload()函数则要在所有的关联资源（包括图像、音频）加载完毕后才会调用。
    var obj  = {};
    obj.__proto__ = Base.prototype;
  Base.call(obj);
  
js延迟加载的方式有哪些？
  defer和async、动态创建DOM方式（用得最多）、按需异步载入js
  
针对 jQuery 的优化方法？
  *基于Class的选择性的性能相对于Id选择器开销很大，因为需遍历所有DOM元素。
   
  *频繁操作的DOM，先缓存起来再操作。用Jquery的链式调用更好。
   比如：var str=$("a").attr("href");
   
  *for (var i = size; i < arr.length; i++) {}
   for 循环每一次循环都查找了数组 (arr) 的.length 属性，在开始循环的时候设置一个变量来存储这个数字，可以让循环跑得更快：
   for (var i = size, length = arr.length; i < length; i++) {}
   
解释下事件代理。
  JavaScript事件代理则是一种简单的技巧，通过它你可以把事件处理器添加到一个父级元素上，这样就避免了把事件处理器添加到多个子级元素上。当我们需要对很多元素添加事件的时候，可以通过将事件添加到它们的父节点而将事件委托给父节点来触发处理函数。这主要得益于浏览器的事件冒泡机制。事件代理用到了两个在JavaSciprt事件中常被忽略的特性：事件冒泡以及目标元素。
  
  function getEventTarget(e) {
      e=e||window.event;
      return e.target||e.srcElement;
  }
  
解释下原型继承的原理。
  以下代码展示了JS引擎如何查找属性：
  
  复制代码
  function getProperty(obj,prop) {
     if (obj.hasOwnProperty(prop)) {
         return obj[prop];
     } else if (obj.__proto__!==null) {
         return getProperty(obj.__proto__,prop);
     } else {
         return undefined;
     }
  }
  
请指出$和$.fn的区别，或者说出$.fn的用途。
  Jquery为开发插件提供了两个方法，分别是：
  
  1 $.extend(obj);
  2 $.fn.extend(obj);
  
  1.那么这两个分别是什么意思？
  $.extend(obj);是为了扩展jquery本身，为类添加新的方法。
  $.fn.extend(obj);给JQUERY对象添加方法。
  
  2.$.fn中的fn是什么意思，其实是prototype，即$.fn=$.prototype;
  具体用法请看下面的例子：
  
  $.extend({
     add:function(a, b) {
         return a+b;
     }
  })
  $.add(5,8); // return 13
  
  注意没有，这边的调用直接调用，前面不用任何对象。直接$.+方法名
  
  $.fn.extend(obj)；对prototype进行扩展，为jquery类添加成员函数，jquery类的实例可以使用这个成员函数。
   $.fn.extend({
       clickwhile:function(){
   
           $(this).click(function(){
               alert($(this).val())
           })
       }
   })
   $('input').clickwhile(); // 当点击输入框会弹出该对象的Value值

  注意调用时候前面是有对象的。即$('input')这么个东西。

